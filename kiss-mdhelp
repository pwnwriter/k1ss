#!/bin/sh
# Convert a markdown file into a help document for KISS.

# TODO: Rewrite this in a more sane language than shell.

# FIXME: bug with using subsubsub sections: if another subsub section
# occurs after a subsubsub section then the number of dashes will be too high.

dashes="________________________________________________________________________________"
box_tb="+------------------------------------------------------------------------------+"
box_s="|                                                                              |"

md_f=$1
if ! [ -e "$md_f" ]; then
    md_f="$(kiss search "$1" | sed q)/README.md"
fi

t_f=$(mktemp)
index_f=$(mktemp)
sed_t=$(mktemp)

strlen() {
    echo "$1" | fold -w 1 | wc -l
}

md_to_ir() {
    sed -E \
        -e "s~^\# ([a-zA-Z0-9]+)~\1\n-80-~" \
        -e "s~^\#\# ([a-zA-Z0-9]+)~-sub- \1\n-80-~" \
        -e "s~^\#\#\# ([a-zA-Z0-9]+)~-subsub- \1~" \
        -e "s~^\#\#\#\# ([a-zA-Z0-9]+)~-subsubsub- \1~" \
        -e "s~\`(.*)\`~-bt-\n-bs-\n-cmd-\1\n-bs-\n-bt-~" \
        < "$md_f" \
        > "$t_f"
}

basic_formatting() {
    sed -E \
        -e "s~^-80-~$dashes~" \
        -e "s~^-bt-~$box_tb~" \
        -e "s~^-bs-~$box_s~" \
        -e "s~^-sub-~[---]~" \
        "$t_f" > "$sed_t"
    mv -f "$sed_t" "$t_f"
}

format_commands() {
    grep -n -E "^-cmd-" "$t_f" | while read -r CMD_L; do
        CMD="$(echo "$CMD_L" | cut -d':' -f2-)"
        LNUM="$(echo "$CMD_L" | cut -d':' -f1)"
        cmd_l=$(strlen "$(echo "$CMD" | sed -E "s~^-cmd-(.*)~\1~")")
        spaces_num=$((80 - (cmd_l + 4))) # + 4 because we have the start of the box and the last pipe of the box
        spaces=""
        for i in $(seq $spaces_num); do
            spaces="$spaces "
        done
        sed -E -e "${LNUM}s~^-cmd-(.*)~|  \1${spaces}|~" "$t_f" > "$sed_t"
        mv -f "$sed_t" "$t_f"
    done
}

format_sub_sub_sections() {
    grep -E "^-subsub-" "$t_f" | while read -r SUBSUB_L; do
        sbsb_l=$(strlen "$(echo "$SUBSUB_L" | sed -E "s~^-subsub-(.*)~\1~")")
        dashes_num=$((80 - (sbsb_l + 8)))
        d=""
        for i in $(seq $dashes_num); do
            d="$d-"
        done
        sed -E -e "s~^-subsub-(.*)~--[---]\1 ${d}~" "$t_f" > "$sed_t"
        mv -f "$sed_t" "$t_f"
    done
}
format_sub_sub_sub_sections() {
    grep -E "^-subsubsub-" "$t_f" | while read -r SUBSUBSUB_L; do
        sbsbsb_l=$(strlen "$(echo "$SUBSUBSUB_L" | sed -E "s~^-subsubsub-(.*)~\1~")")
        dashes_num=$((80 - (sbsbsb_l + 10)))
        d=""
        for i in $(seq $dashes_num); do
            d="$d-"
        done
        sed -E -e "s~^-subsubsub-(.*)~----[---]\1 ${d}~" "$t_f" > "$sed_t"
        mv -f "$sed_t" "$t_f"
    done
}
number_sections() {
    i=1
    grep -F '[---]' "$t_f" | while read -r HEADING; do
        #[---] -> [hto]
        o=$i
        t=$((o / 10))
        h=$((t / 10))
        o=$((o % 10))
        t=$((t % 10))
        sed "s~$(echo "$HEADING" | sed -e "s~\[~\\\\[~" -e "s~\]~\\\\]~")~$(echo "$HEADING" | sed "s~\[---\]~\[$h$t$o\]~")~" "$t_f" > "$sed_t"
        mv -f "$sed_t" "$t_f"
        i=$((i + 1))
    done
}

mk_index() {
    echo "[000] Index"
    printf "%s\n\n" "$dashes"
    set -f # disable globbing for this part
    grep -E "\[[0-9]{3}\]" "$t_f" |
        sed "s~^----~    ~;s~^--~  ~" |
        tr -d '-' |
        sed -E \
            -e "s~(\[[0-9]{3}\]) (.*)~* \2 \1~" \
            -e "s~(.)  \[~\1 \[~" \
            -e "s~^~_~" | while read -r LINE; do
        LINE="$(echo "$LINE" | sed -E -e "s~^_~~" -e "s~ \*~  \*~")"
        line_l=$(strlen "$(printf "%s\n" "$LINE")")
        dots_num=$((80 - (line_l + 1)))

        dots=""
        for i in $(seq $dots_num); do
            dots="$dots."
        done
        printf "%s\n" "$LINE" | sed -E "s~ (\[[0-9]{3}\])~ $dots \1~"
    done
    printf "\n"
}

main() {
    md_to_ir
    basic_formatting
    format_commands
    format_sub_sub_sections
    format_sub_sub_sub_sections
    number_sections

    mk_index > "$index_f"
    sed -E -e "s~(\[001\])~--index--\n\1~" "$t_f" > "$sed_t"
    mv -f "$sed_t" "$t_f"
    sed -E -e "/--index--/r $index_f" -e "/--index--/d" "$t_f" > "$sed_t"
    mv -f "$sed_t" "$t_f"

    cat "$t_f"
    rm -- "$t_f" "$index_f"
}

main
